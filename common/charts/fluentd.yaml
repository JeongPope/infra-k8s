#
# Reference:
# - Docs: https://docs.fluentd.org
# - Github: https://github.com/bitnami/charts/tree/master/bitnami/fluentd/
#

forwarder:
  enabled: false

aggregator:
  enabled: true

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3

  resources:
    requests:
      cpu: 300m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

  extraEnvVars:
    - name: ELASTICSEARCH_HOST
      value: eck-elasticsearch-es-http.monitoring.svc
    - name: ELASTICSEARCH_PORT
      value: "9200"
    - name: ELASTICSEARCH_USER
      value: "elastic"
    - name: ELASTICSEARCH_PASSWORD
      value: "changeme" # need to change

  configMapFiles:
    fluentd.conf: |
      # Ignore fluentd own events
      <match @FLUENT_LOG>
        @type null
      </match>

      @include fluentd-inputs.conf
      @include fluentd-filter.conf
      @include fluentd-output.conf

      {{- if .Values.metrics.enabled }}
      @include metrics.conf
      {{- end }}

    fluentd-inputs.conf: |
      # TCP input to receive logs from
      {{- if .Values.aggregator.port }}
      <source>
        @type forward
        bind 0.0.0.0
        port {{ .Values.aggregator.port }}
        
        {{- if .Values.tls.enabled }}
        <transport tls>
          ca_path /opt/bitnami/fluentd/certs/in_forward/ca.crt
          cert_path /opt/bitnami/fluentd/certs/in_forward/tls.crt
          private_key_path /opt/bitnami/fluentd/certs/in_forward/tls.key
          client_cert_auth true
        </transport>
        {{- end }}

      </source>
      {{- end }}

      # HTTP input for the liveness and readiness probes
      <source>
        @type http
        bind 0.0.0.0
        port 9880
      </source>

    fluentd-filter.conf: |
      # <filter *.**>
      #   @type record_transformer
      #   <record>
      #     test filter
      #   </record>
      # </filter>

    fluentd-output.conf: |
      # Throw the healthcheck to the standard output
      <match fluentd.healthcheck>
        @type stdout
      </match>

      # Send the logs to the standard output
      <match kube.**>
        # @type stdout
        @type elasticsearch
        include_tag_key true
        host "#{ENV['ELASTICSEARCH_HOST']}"
        port "#{ENV['ELASTICSEARCH_PORT']}"
        user "#{ENV['ELASTICSEARCH_USER']}"
        password "#{ENV['ELASTICSEARCH_PASSWORD']}"

        logstash_format true
        logstash_prefix fluentd

        reload_connections false
        reconnect_on_error true
        reload_on_failure true
        request_timeout 15s
        flush_interval 10s

        <buffer>
          @type file
          path /opt/bitnami/fluentd/logs/buffers/logs.buffer
          flush_thread_count 2
          flush_interval 5s
        </buffer>
      </match>

    metrics.conf: |
      # Prometheus Exporter Plugin
      # input plugin that exports metrics
      <source>
        @type prometheus
        port {{ .Values.metrics.service.port }}
      </source>

      # input plugin that collects metrics from MonitorAgent
      <source>
        @type prometheus_monitor
        <labels>
          host ${hostname}
        </labels>
      </source>

      # input plugin that collects metrics for output plugin
      <source>
        @type prometheus_output_monitor
        <labels>
          host ${hostname}
        </labels>
      </source>
